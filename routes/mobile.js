module.exports = function (current_video_call_state) {    var express = require('express');    var router = express.Router();//mobile/voice_mail_log    router.get('/voice_mail_log', function(req, res, next) {        res.json({ voice_mail_log: [ //sql 던진 값 rows를 그냥 바로 json으로 보내버리면 될듯 사진만 따로 주고                {                    log_no:"1",                    current_datetime:"0000-00-00",                    memo:"누구누구",                    file:"multer 모듈이용해서 제공 공부해야됨!"                },                {                    log_no:"2",                    current_datetime:"0000-00-00",                    memo:"?????",                    file:"어떻게 주지?"                }            ]});    });//mobile/video_call_log    router.get('/video_call_log', function(req, res, next) {        res.json({ video_call_log: [                {                    log_no:"1",                    current_datetime:"0000-00-00",                    memo:"누구누구",                    file:"multer 모듈이용해서 제공 공부해야됨!"                },                {                    log_no:"2",                    current_datetime:"0000-00-00",                    memo:"?????",                    file:"어떻게 주지?"                }            ]});    });//mobile/save_memo/:log_id/:memo    router.get('/save_memo/:log_id/:memo', function(req, res, next) {        //특정 log_id에 대한 memo 저장 - 이미 저장 되있다면 덮어쓰기    });//mobile/voice_mail_log/delete - post 방식으로 삭제할 log_no json 배열을 보내준다.    router.get('/voice_mail_log/delete', function(req, res, next) {        //log_no에 해당하는 삭제 쿼리 반복수행    });//mobile/video_call_log/delete - post 방식으로 삭제할 log_no json 배열을 보내준다.    router.post('/video_call_log/delete', function(req, res, next) {        //log_no에 해당하는 삭제 쿼리 반복수행    });//mobile/video_call_exit    router.get('/video_call_exit', function(req, res, next) {        //모바일프로그램에서 먼저 끊을 때 이 url 요청        if(current_video_call_state == 0) {            //잘못된 요청 또는 이미 끊어졌습니다.        } else {            //socket.io를 통해 리눅스프로그램에 알림            current_video_call_state = 0;        }    });    return router;}